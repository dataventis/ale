;;;; ale core: assembler bootstrapping

(asm*
  .eval (asm*
      !make-encoder (name)
      .const name
      dup
      declare)
  .const declare*
  bind

  .eval (asm*
      !make-encoder (name)
      .const name
      dup
      private)
  .const private*
  bind

  .eval (asm*
      !make-encoder (name value)
      .eval value
      dup
      .const name
      bind)
  .const define*
  bind
  ; block evaluator will pop this
  nil)

(define* cons
  (lambda (car cdr)
    (asm*
        .resolve cdr
        .resolve car
        cons)))

(define* car
  (lambda (cons)
    (asm*
        .resolve cons
        car)))

(define* cdr
  (lambda (cons)
    (asm*
        .resolve cons cdr)))

(define* quote
  (asm*
      !make-encoder (form)
      .const form))

(define* raise
  (lambda (err)
    (asm*
        .resolve err
        panic
        nil)))

(define* if
  (asm* !make-encoder
    [(predicate consequent alternative)
         .eval predicate
          make-truthy
          cond-jump :consequent
          .eval alternative
          jump :end
      :consequent
          .eval consequent
      :end]
    [(predicate consequent)
          .eval predicate
          make-truthy
          cond-jump :consequent
          nil
          jump :end
      :consequent
          .eval consequent
      :end]))
