// Code generated by "stringer -output token_string.go -type TokenType"; DO NOT EDIT.

package read

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Error-0]
	_ = x[Keyword-1]
	_ = x[Identifier-2]
	_ = x[Dot-3]
	_ = x[String-4]
	_ = x[Number-5]
	_ = x[ListStart-6]
	_ = x[ListEnd-7]
	_ = x[VectorStart-8]
	_ = x[VectorEnd-9]
	_ = x[ObjectStart-10]
	_ = x[ObjectEnd-11]
	_ = x[QuoteMarker-12]
	_ = x[SyntaxMarker-13]
	_ = x[UnquoteMarker-14]
	_ = x[SpliceMarker-15]
	_ = x[PatternMarker-16]
	_ = x[Whitespace-17]
	_ = x[NewLine-18]
	_ = x[Comment-19]
	_ = x[endOfFile-20]
}

const _TokenType_name = "ErrorKeywordIdentifierDotStringNumberListStartListEndVectorStartVectorEndObjectStartObjectEndQuoteMarkerSyntaxMarkerUnquoteMarkerSpliceMarkerPatternMarkerWhitespaceNewLineCommentendOfFile"

var _TokenType_index = [...]uint8{0, 5, 12, 22, 25, 31, 37, 46, 53, 64, 73, 84, 93, 104, 116, 129, 141, 154, 164, 171, 178, 187}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
