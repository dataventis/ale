// Code generated by "stringer -type=Opcode"; DO NOT EDIT.

package isa

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OpcodeMask-63]
	_ = x[Add-0]
	_ = x[Arg-1]
	_ = x[ArgLen-2]
	_ = x[Bind-3]
	_ = x[BindRef-4]
	_ = x[Call-5]
	_ = x[Call0-6]
	_ = x[Call1-7]
	_ = x[CallWith-8]
	_ = x[Car-9]
	_ = x[Cdr-10]
	_ = x[Closure-11]
	_ = x[CondJump-12]
	_ = x[Cons-13]
	_ = x[Const-14]
	_ = x[Declare-15]
	_ = x[Deref-16]
	_ = x[Div-17]
	_ = x[Dup-18]
	_ = x[Empty-19]
	_ = x[Eq-20]
	_ = x[False-21]
	_ = x[Jump-22]
	_ = x[Load-23]
	_ = x[MakeTruthy-24]
	_ = x[Mod-25]
	_ = x[Mul-26]
	_ = x[Neg-27]
	_ = x[NegInf-28]
	_ = x[NegInt-29]
	_ = x[NewRef-30]
	_ = x[NoOp-31]
	_ = x[Not-32]
	_ = x[Nil-33]
	_ = x[NumEq-34]
	_ = x[NumGt-35]
	_ = x[NumGte-36]
	_ = x[NumLt-37]
	_ = x[NumLte-38]
	_ = x[NumNeq-39]
	_ = x[Panic-40]
	_ = x[Pop-41]
	_ = x[PosInf-42]
	_ = x[PosInt-43]
	_ = x[Private-44]
	_ = x[Resolve-45]
	_ = x[RestArg-46]
	_ = x[RetFalse-47]
	_ = x[RetNil-48]
	_ = x[RetTrue-49]
	_ = x[Return-50]
	_ = x[Self-51]
	_ = x[Store-52]
	_ = x[Sub-53]
	_ = x[TailCall-54]
	_ = x[True-55]
	_ = x[Zero-56]
}

const (
	_Opcode_name_0 = "AddArgArgLenBindBindRefCallCall0Call1CallWithCarCdrClosureCondJumpConsConstDeclareDerefDivDupEmptyEqFalseJumpLoadMakeTruthyModMulNegNegInfNegIntNewRefNoOpNotNilNumEqNumGtNumGteNumLtNumLteNumNeqPanicPopPosInfPosIntPrivateResolveRestArgRetFalseRetNilRetTrueReturnSelfStoreSubTailCallTrueZero"
	_Opcode_name_1 = "OpcodeMask"
)

var (
	_Opcode_index_0 = [...]uint16{0, 3, 6, 12, 16, 23, 27, 32, 37, 45, 48, 51, 58, 66, 70, 75, 82, 87, 90, 93, 98, 100, 105, 109, 113, 123, 126, 129, 132, 138, 144, 150, 154, 157, 160, 165, 170, 176, 181, 187, 193, 198, 201, 207, 213, 220, 227, 234, 242, 248, 255, 261, 265, 270, 273, 281, 285, 289}
)

func (i Opcode) String() string {
	switch {
	case i <= 56:
		return _Opcode_name_0[_Opcode_index_0[i]:_Opcode_index_0[i+1]]
	case i == 63:
		return _Opcode_name_1
	default:
		return "Opcode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
