// Code generated by "stringer -type=Opcode"; DO NOT EDIT.

package isa

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Label-256]
	_ = x[Add-0]
	_ = x[Arg-1]
	_ = x[ArgLen-2]
	_ = x[Bind-3]
	_ = x[BindRef-4]
	_ = x[Call-5]
	_ = x[Call0-6]
	_ = x[Call1-7]
	_ = x[Closure-8]
	_ = x[CondJump-9]
	_ = x[Const-10]
	_ = x[Declare-11]
	_ = x[Deref-12]
	_ = x[Div-13]
	_ = x[Dup-14]
	_ = x[Eq-15]
	_ = x[False-16]
	_ = x[Gt-17]
	_ = x[Gte-18]
	_ = x[Jump-19]
	_ = x[Load-20]
	_ = x[Lt-21]
	_ = x[Lte-22]
	_ = x[MakeTruthy-23]
	_ = x[Mod-24]
	_ = x[Mul-25]
	_ = x[Neg-26]
	_ = x[NegInf-27]
	_ = x[NegOne-28]
	_ = x[Neq-29]
	_ = x[NewRef-30]
	_ = x[NoOp-31]
	_ = x[Not-32]
	_ = x[Nil-33]
	_ = x[One-34]
	_ = x[Panic-35]
	_ = x[Pop-36]
	_ = x[PosInf-37]
	_ = x[Private-38]
	_ = x[Resolve-39]
	_ = x[RestArg-40]
	_ = x[RetFalse-41]
	_ = x[RetNil-42]
	_ = x[RetTrue-43]
	_ = x[Return-44]
	_ = x[Self-45]
	_ = x[Store-46]
	_ = x[Sub-47]
	_ = x[TailCall-48]
	_ = x[True-49]
	_ = x[Two-50]
	_ = x[Zero-51]
}

const (
	_Opcode_name_0 = "AddArgArgLenBindBindRefCallCall0Call1ClosureCondJumpConstDeclareDerefDivDupEqFalseGtGteJumpLoadLtLteMakeTruthyModMulNegNegInfNegOneNeqNewRefNoOpNotNilOnePanicPopPosInfPrivateResolveRestArgRetFalseRetNilRetTrueReturnSelfStoreSubTailCallTrueTwoZero"
	_Opcode_name_1 = "Label"
)

var (
	_Opcode_index_0 = [...]uint8{0, 3, 6, 12, 16, 23, 27, 32, 37, 44, 52, 57, 64, 69, 72, 75, 77, 82, 84, 87, 91, 95, 97, 100, 110, 113, 116, 119, 125, 131, 134, 140, 144, 147, 150, 153, 158, 161, 167, 174, 181, 188, 196, 202, 209, 215, 219, 224, 227, 235, 239, 242, 246}
)

func (i Opcode) String() string {
	switch {
	case i <= 51:
		return _Opcode_name_0[_Opcode_index_0[i]:_Opcode_index_0[i+1]]
	case i == 256:
		return _Opcode_name_1
	default:
		return "Opcode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
