// Code generated by "stringer -type=Opcode"; DO NOT EDIT.

package isa

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Label-63]
	_ = x[Add-0]
	_ = x[Arg-1]
	_ = x[ArgLen-2]
	_ = x[Bind-3]
	_ = x[BindRef-4]
	_ = x[Call-5]
	_ = x[Call0-6]
	_ = x[Call1-7]
	_ = x[Car-8]
	_ = x[Cdr-9]
	_ = x[Closure-10]
	_ = x[CondJump-11]
	_ = x[Const-12]
	_ = x[Dec-13]
	_ = x[Declare-14]
	_ = x[Deref-15]
	_ = x[Div-16]
	_ = x[Dup-17]
	_ = x[Eq-18]
	_ = x[False-19]
	_ = x[Gt-20]
	_ = x[Gte-21]
	_ = x[Inc-22]
	_ = x[Jump-23]
	_ = x[Load-24]
	_ = x[Lt-25]
	_ = x[Lte-26]
	_ = x[MakeTruthy-27]
	_ = x[Mod-28]
	_ = x[Mul-29]
	_ = x[Neg-30]
	_ = x[NegInf-31]
	_ = x[NegInt-32]
	_ = x[Neq-33]
	_ = x[NewRef-34]
	_ = x[NoOp-35]
	_ = x[Not-36]
	_ = x[Nil-37]
	_ = x[Panic-38]
	_ = x[Pop-39]
	_ = x[PosInf-40]
	_ = x[PosInt-41]
	_ = x[Private-42]
	_ = x[Resolve-43]
	_ = x[RestArg-44]
	_ = x[RetFalse-45]
	_ = x[RetNil-46]
	_ = x[RetTrue-47]
	_ = x[Return-48]
	_ = x[Self-49]
	_ = x[Store-50]
	_ = x[Sub-51]
	_ = x[TailCall-52]
	_ = x[True-53]
	_ = x[Zero-54]
}

const (
	_Opcode_name_0 = "AddArgArgLenBindBindRefCallCall0Call1CarCdrClosureCondJumpConstDecDeclareDerefDivDupEqFalseGtGteIncJumpLoadLtLteMakeTruthyModMulNegNegInfNegIntNeqNewRefNoOpNotNilPanicPopPosInfPosIntPrivateResolveRestArgRetFalseRetNilRetTrueReturnSelfStoreSubTailCallTrueZero"
	_Opcode_name_1 = "Label"
)

var (
	_Opcode_index_0 = [...]uint16{0, 3, 6, 12, 16, 23, 27, 32, 37, 40, 43, 50, 58, 63, 66, 73, 78, 81, 84, 86, 91, 93, 96, 99, 103, 107, 109, 112, 122, 125, 128, 131, 137, 143, 146, 152, 156, 159, 162, 167, 170, 176, 182, 189, 196, 203, 211, 217, 224, 230, 234, 239, 242, 250, 254, 258}
)

func (i Opcode) String() string {
	switch {
	case i <= 54:
		return _Opcode_name_0[_Opcode_index_0[i]:_Opcode_index_0[i+1]]
	case i == 63:
		return _Opcode_name_1
	default:
		return "Opcode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
