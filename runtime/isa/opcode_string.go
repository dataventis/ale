// Code generated by "stringer -type=Opcode"; DO NOT EDIT.

package isa

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OpcodeMask-63]
	_ = x[Add-0]
	_ = x[Arg-1]
	_ = x[ArgLen-2]
	_ = x[Bind-3]
	_ = x[BindRef-4]
	_ = x[Call-5]
	_ = x[Call0-6]
	_ = x[Call1-7]
	_ = x[CallWith-8]
	_ = x[Car-9]
	_ = x[Cdr-10]
	_ = x[Closure-11]
	_ = x[CondJump-12]
	_ = x[Const-13]
	_ = x[Declare-14]
	_ = x[Deref-15]
	_ = x[Div-16]
	_ = x[Dup-17]
	_ = x[Eq-18]
	_ = x[False-19]
	_ = x[Gt-20]
	_ = x[Gte-21]
	_ = x[Jump-22]
	_ = x[Load-23]
	_ = x[Lt-24]
	_ = x[Lte-25]
	_ = x[MakeTruthy-26]
	_ = x[Mod-27]
	_ = x[Mul-28]
	_ = x[Neg-29]
	_ = x[NegInf-30]
	_ = x[NegInt-31]
	_ = x[Neq-32]
	_ = x[NewRef-33]
	_ = x[NoOp-34]
	_ = x[Not-35]
	_ = x[Nil-36]
	_ = x[Panic-37]
	_ = x[Pop-38]
	_ = x[PosInf-39]
	_ = x[PosInt-40]
	_ = x[Private-41]
	_ = x[Resolve-42]
	_ = x[RestArg-43]
	_ = x[RetFalse-44]
	_ = x[RetNil-45]
	_ = x[RetTrue-46]
	_ = x[Return-47]
	_ = x[Self-48]
	_ = x[Store-49]
	_ = x[Sub-50]
	_ = x[TailCall-51]
	_ = x[True-52]
	_ = x[Zero-53]
}

const (
	_Opcode_name_0 = "AddArgArgLenBindBindRefCallCall0Call1CallWithCarCdrClosureCondJumpConstDeclareDerefDivDupEqFalseGtGteJumpLoadLtLteMakeTruthyModMulNegNegInfNegIntNeqNewRefNoOpNotNilPanicPopPosInfPosIntPrivateResolveRestArgRetFalseRetNilRetTrueReturnSelfStoreSubTailCallTrueZero"
	_Opcode_name_1 = "OpcodeMask"
)

var (
	_Opcode_index_0 = [...]uint16{0, 3, 6, 12, 16, 23, 27, 32, 37, 45, 48, 51, 58, 66, 71, 78, 83, 86, 89, 91, 96, 98, 101, 105, 109, 111, 114, 124, 127, 130, 133, 139, 145, 148, 154, 158, 161, 164, 169, 172, 178, 184, 191, 198, 205, 213, 219, 226, 232, 236, 241, 244, 252, 256, 260}
)

func (i Opcode) String() string {
	switch {
	case i <= 53:
		return _Opcode_name_0[_Opcode_index_0[i]:_Opcode_index_0[i+1]]
	case i == 63:
		return _Opcode_name_1
	default:
		return "Opcode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
